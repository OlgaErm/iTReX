{
  "input": {
    "Amin_select": "var10",
    "Amin_slider": 10,
    "conc_select": "nM",
    "conc_text": "Unit",
    "CRA_colcluster": "euclidean",
    "CRA_include_sd": true,
    "CRA_include_zp": true,
    "CRA_mod": "CRA Therapy Parameters",
    "CRA_rowcluster": "euclidean",
    "CRA_sdss": false,
    "CRAc_height": 250,
    "CRAc_width": 500,
    "dropdown_cohort": 0,
    "dropdown_reference_samples": 0,
    "dropdown_single_sample": 0,
    "dropdownHitNetDrugAnnotation": 0,
    "dropdownHitNetDrugDank": 0,
    "dropdownOmicsAnnotationTable": 0,
    "dropdownOmicsTable": 0,
    "DTanno": "Tupload",
    "DTannoO": "Tupload",
    "file_drugbank": null,
    "file_drugbankO": null,
    "file_drugtarget": null,
    "file_drugtargetO": null,
    "fileOmics": null,
    "HitNet": 0,
    "HitNetLicense": false,
    "iTReX": "MRA-mod/Sample Screen",
    "layout_and_readouts": "separate_files",
    "layout_table_file": {
      "name": [
        "iTReX-Demo_CRA_Layout.xlsx"
      ],
      "size": [
        88678
      ],
      "type": [
        "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      ],
      "datapath": [
        "0.xlsx"
      ]
    },
    "MRA_colcluster": "euclidean",
    "MRA_include_sd": true,
    "MRA_include_zp": true,
    "MRA_mod": "MRA Therapy Parameters",
    "MRA_rowcluster": "euclidean",
    "MRA_sdss": false,
    "MRAc_height": 250,
    "MRAc_width": 500,
    "nplranalyzeperreplica": 1,
    "number_of_samples": "single_sample",
    "Omics": 0,
    "OmicsLicense": false,
    "parTable_cell_clicked": {

    },
    "parTable_cells_selected": [

    ],
    "parTable_columns_selected": null,
    "parTable_rep_cell_clicked": {

    },
    "parTable_rep_cells_selected": [

    ],
    "parTable_rep_columns_selected": null,
    "parTable_rep_rows_all": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99,
      100,
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      120,
      121,
      122,
      123,
      124,
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154
    ],
    "parTable_rep_rows_current": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10
    ],
    "parTable_rep_rows_selected": null,
    "parTable_rep_search": "",
    "parTable_rep_state": {
      "start": 0,
      "length": 10,
      "order": [

      ],
      "search": {
        "search": "",
        "smart": true,
        "regex": false,
        "caseInsensitive": true
      },
      "columns": [
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        }
      ]
    },
    "parTable_rows_all": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77
    ],
    "parTable_rows_current": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10
    ],
    "parTable_rows_selected": null,
    "parTable_search": "",
    "parTable_state": {
      "start": 0,
      "length": 10,
      "order": [

      ],
      "search": {
        "search": "",
        "smart": true,
        "regex": false,
        "caseInsensitive": true
      },
      "columns": [
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        }
      ]
    },
    "QC_mod": "Screen Summary",
    "readout_matrices_file": {
      "name": [
        "iTReX-Demo_CRA_1ReadoutXlsx_INF-R-1632.zip"
      ],
      "size": [
        53445
      ],
      "type": [
        "application/zip"
      ],
      "datapath": [
        "0.zip"
      ]
    },
    "reference_samples_file": null,
    "sample": "PDX",
    "sample_CRA": "PDX",
    "sample_MRA": "PDX",
    "sample_net": "PDX",
    "sample_omics": "PDX",
    "screen_type": "Monotherapy",
    "screen_type_O": "Monotherapy",
    "start_oca": 0,
    "summary_cell_clicked": {

    },
    "summary_cells_selected": [

    ],
    "summary_columns_selected": null,
    "summary_rows_all": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33
    ],
    "summary_rows_current": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10
    ],
    "summary_rows_selected": null,
    "summary_search": "",
    "summary_state": {
      "start": 0,
      "length": 10,
      "order": [

      ],
      "search": {
        "search": "",
        "smart": true,
        "regex": false,
        "caseInsensitive": true
      },
      "columns": [
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        }
      ]
    },
    "summary2_cell_clicked": {

    },
    "summary2_cells_selected": [

    ],
    "summary2_columns_selected": null,
    "summary2_rows_all": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33
    ],
    "summary2_rows_current": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10
    ],
    "summary2_rows_selected": null,
    "summary2_search": "",
    "summary2_state": {
      "start": 0,
      "length": 10,
      "order": [

      ],
      "search": {
        "search": "",
        "smart": true,
        "regex": false,
        "caseInsensitive": true
      },
      "columns": [
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        },
        {
          "visible": true,
          "search": {
            "search": "",
            "smart": true,
            "regex": false,
            "caseInsensitive": true
          }
        }
      ]
    },
    "TCA": 0,
    "threshold": 2,
    "threshold_O": 2,
    "Tupload_input": null,
    "Tupload_inputO": null,
    "type_of_analysis": "StepA",
    "type_of_readout": "cell_viability",
    "upload_reference_samples": false,
    "viewQCreport": 1,
    "vis_CRA": 0,
    "vis_MRA": 0,
    "vis_QCN": 0
  },
  "output": {
    "download_MRAtable": {
      "html": "<a id=\"xls_table\" class=\"btn btn-default shiny-download-link \" href=\"\" target=\"_blank\" download>\n  <i class=\"fa fa-download\" role=\"presentation\" aria-label=\"download icon\"><\/i>\n  Download Spreadsheet\n<\/a>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "5.15.3",
          "src": {
            "href": "font-awesome-5.15.3"
          },
          "meta": null,
          "script": null,
          "stylesheet": [
            "css/all.min.css",
            "css/v4-shims.min.css"
          ],
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "download_MRAtable_rep": {
      "html": "<a id=\"xls_table_rep\" class=\"btn btn-default shiny-download-link \" href=\"\" target=\"_blank\" download>\n  <i class=\"fa fa-download\" role=\"presentation\" aria-label=\"download icon\"><\/i>\n  Download Spreadsheet\n<\/a>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "5.15.3",
          "src": {
            "href": "font-awesome-5.15.3"
          },
          "meta": null,
          "script": null,
          "stylesheet": [
            "css/all.min.css",
            "css/v4-shims.min.css"
          ],
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "download_QCNreport": {
      "html": "<a id=\"report\" class=\"btn btn-default shiny-download-link \" href=\"\" target=\"_blank\" download>\n  <i class=\"fa fa-download\" role=\"presentation\" aria-label=\"download icon\"><\/i>\n  Download Report\n<\/a>",
      "deps": [
        {
          "name": "font-awesome",
          "version": "5.15.3",
          "src": {
            "href": "font-awesome-5.15.3"
          },
          "meta": null,
          "script": null,
          "stylesheet": [
            "css/all.min.css",
            "css/v4-shims.min.css"
          ],
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "layout_table_uploaded": true,
    "parTable": {
      "x": {
        "filter": "none",
        "vertical": false,
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Drug.ID<\/th>\n      <th>Drug.Name<\/th>\n      <th>abs_IC25<\/th>\n      <th>abs_IC75<\/th>\n      <th>abs_IC50<\/th>\n      <th>rel_IC50<\/th>\n      <th>Slope<\/th>\n      <th>Imin<\/th>\n      <th>Imax<\/th>\n      <th>MIN.Conc.tested.nM<\/th>\n      <th>MAX.Conc.tested.nM<\/th>\n      <th>DSS_asym<\/th>\n      <th>PI1<\/th>\n      <th>PI2<\/th>\n      <th>PI3<\/th>\n      <th>PI4<\/th>\n      <th>PI5<\/th>\n      <th>GOF<\/th>\n      <th>Amin<\/th>\n      <th>DSS_asym_adj<\/th>\n      <th>controlDSS<\/th>\n      <th>sDSS_asym<\/th>\n      <th>controlDSS_adj<\/th>\n      <th>sDSS_asym_adj<\/th>\n      <th>analysis<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "columnDefs": [
            {
              "targets": 3,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 4,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 5,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 6,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 7,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 8,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 9,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 12,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 13,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 14,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 15,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 16,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 17,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 18,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 19,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 20,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 21,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 22,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 23,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "className": "dt-right",
              "targets": [
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ]
            },
            {
              "orderable": false,
              "targets": 0
            }
          ],
          "order": [

          ],
          "autoWidth": false,
          "orderClasses": false,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row",
          "selectable": null
        }
      },
      "evals": [
        "options.columnDefs.0.render",
        "options.columnDefs.1.render",
        "options.columnDefs.2.render",
        "options.columnDefs.3.render",
        "options.columnDefs.4.render",
        "options.columnDefs.5.render",
        "options.columnDefs.6.render",
        "options.columnDefs.7.render",
        "options.columnDefs.8.render",
        "options.columnDefs.9.render",
        "options.columnDefs.10.render",
        "options.columnDefs.11.render",
        "options.columnDefs.12.render",
        "options.columnDefs.13.render",
        "options.columnDefs.14.render",
        "options.columnDefs.15.render",
        "options.columnDefs.16.render",
        "options.columnDefs.17.render",
        "options.columnDefs.18.render",
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "jquery",
          "version": "3.6.0",
          "src": {
            "href": "jquery-3.6.0"
          },
          "meta": null,
          "script": "jquery-3.6.0.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "dt-core",
          "version": "1.11.3",
          "src": {
            "href": "dt-core-1.11.3"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "crosstalk",
          "version": "1.2.0",
          "src": {
            "href": "crosstalk-1.2.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.min.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "parTable_rep": {
      "x": {
        "filter": "none",
        "vertical": false,
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>Drug.ID<\/th>\n      <th>Drug.Name<\/th>\n      <th>abs_IC25<\/th>\n      <th>abs_IC75<\/th>\n      <th>abs_IC50<\/th>\n      <th>rel_IC50<\/th>\n      <th>Slope<\/th>\n      <th>Imin<\/th>\n      <th>Imax<\/th>\n      <th>MIN.Conc.tested.nM<\/th>\n      <th>MAX.Conc.tested.nM<\/th>\n      <th>DSS_asym<\/th>\n      <th>PI1<\/th>\n      <th>PI2<\/th>\n      <th>PI3<\/th>\n      <th>PI4<\/th>\n      <th>PI5<\/th>\n      <th>GOF<\/th>\n      <th>Amin<\/th>\n      <th>DSS_asym_adj<\/th>\n      <th>controlDSS<\/th>\n      <th>sDSS_asym<\/th>\n      <th>controlDSS_adj<\/th>\n      <th>sDSS_asym_adj<\/th>\n      <th>analysis<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "columnDefs": [
            {
              "targets": 3,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 4,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 5,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 6,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 7,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 8,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 9,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 12,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 13,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 14,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 15,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 16,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 17,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 18,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 19,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 20,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 21,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 22,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 23,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "className": "dt-right",
              "targets": [
                1,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20
              ]
            },
            {
              "orderable": false,
              "targets": 0
            }
          ],
          "order": [

          ],
          "autoWidth": false,
          "orderClasses": false,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row",
          "selectable": null
        }
      },
      "evals": [
        "options.columnDefs.0.render",
        "options.columnDefs.1.render",
        "options.columnDefs.2.render",
        "options.columnDefs.3.render",
        "options.columnDefs.4.render",
        "options.columnDefs.5.render",
        "options.columnDefs.6.render",
        "options.columnDefs.7.render",
        "options.columnDefs.8.render",
        "options.columnDefs.9.render",
        "options.columnDefs.10.render",
        "options.columnDefs.11.render",
        "options.columnDefs.12.render",
        "options.columnDefs.13.render",
        "options.columnDefs.14.render",
        "options.columnDefs.15.render",
        "options.columnDefs.16.render",
        "options.columnDefs.17.render",
        "options.columnDefs.18.render",
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "jquery",
          "version": "3.6.0",
          "src": {
            "href": "jquery-3.6.0"
          },
          "meta": null,
          "script": "jquery-3.6.0.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "dt-core",
          "version": "1.11.3",
          "src": {
            "href": "dt-core-1.11.3"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "crosstalk",
          "version": "1.2.0",
          "src": {
            "href": "crosstalk-1.2.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.min.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "readout_matrices_uploaded": true,
    "reference_samples_uploaded": false,
    "summary": {
      "x": {
        "filter": "none",
        "vertical": false,
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>empty<\/th>\n      <th>neg<\/th>\n      <th>pos<\/th>\n      <th>STS<\/th>\n      <th>therapy<\/th>\n      <th>untreated<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "columnDefs": [
            {
              "targets": 1,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 2,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 3,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 4,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 5,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 6,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "orderable": false,
              "targets": 0
            }
          ],
          "order": [

          ],
          "autoWidth": false,
          "orderClasses": false,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row",
          "selectable": null
        }
      },
      "evals": [
        "options.columnDefs.0.render",
        "options.columnDefs.1.render",
        "options.columnDefs.2.render",
        "options.columnDefs.3.render",
        "options.columnDefs.4.render",
        "options.columnDefs.5.render",
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "jquery",
          "version": "3.6.0",
          "src": {
            "href": "jquery-3.6.0"
          },
          "meta": null,
          "script": "jquery-3.6.0.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "dt-core",
          "version": "1.11.3",
          "src": {
            "href": "dt-core-1.11.3"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "crosstalk",
          "version": "1.2.0",
          "src": {
            "href": "crosstalk-1.2.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.min.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "summary2": {
      "x": {
        "filter": "none",
        "vertical": false,
        "container": "<table class=\"display\">\n  <thead>\n    <tr>\n      <th> <\/th>\n      <th>neg<\/th>\n      <th>pos<\/th>\n      <th>STS<\/th>\n      <th>therapy<\/th>\n    <\/tr>\n  <\/thead>\n<\/table>",
        "options": {
          "columnDefs": [
            {
              "targets": 1,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 2,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 3,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "targets": 4,
              "render": "function(data, type, row, meta) {\n    return type !== 'display' ? data : DTWidget.formatRound(data, 2, 3, \",\", \".\", null);\n  }"
            },
            {
              "orderable": false,
              "targets": 0
            }
          ],
          "order": [

          ],
          "autoWidth": false,
          "orderClasses": false,
          "ajax": {
            "type": "POST",
            "data": "function(d) {\nd.search.caseInsensitive = true;\nd.search.smart = true;\nd.escape = true;\nvar encodeAmp = function(x) { x.value = x.value.replace(/&/g, \"%26\"); }\nencodeAmp(d.search);\n$.each(d.columns, function(i, v) {encodeAmp(v.search);});\n}"
          },
          "serverSide": true,
          "processing": true
        },
        "selection": {
          "mode": "multiple",
          "selected": null,
          "target": "row",
          "selectable": null
        }
      },
      "evals": [
        "options.columnDefs.0.render",
        "options.columnDefs.1.render",
        "options.columnDefs.2.render",
        "options.columnDefs.3.render",
        "options.ajax.data"
      ],
      "jsHooks": [

      ],
      "deps": [
        {
          "name": "jquery",
          "version": "3.6.0",
          "src": {
            "href": "jquery-3.6.0"
          },
          "meta": null,
          "script": "jquery-3.6.0.min.js",
          "stylesheet": null,
          "head": null,
          "attachment": null,
          "all_files": true
        },
        {
          "name": "dt-core",
          "version": "1.11.3",
          "src": {
            "href": "dt-core-1.11.3"
          },
          "meta": null,
          "script": "js/jquery.dataTables.min.js",
          "stylesheet": [
            "css/jquery.dataTables.min.css",
            "css/jquery.dataTables.extra.css"
          ],
          "head": null,
          "attachment": null,
          "package": null,
          "all_files": false
        },
        {
          "name": "crosstalk",
          "version": "1.2.0",
          "src": {
            "href": "crosstalk-1.2.0"
          },
          "meta": null,
          "script": "js/crosstalk.min.js",
          "stylesheet": "css/crosstalk.min.css",
          "head": null,
          "attachment": null,
          "all_files": true
        }
      ]
    },
    "text1": "Screen Summary"
  },
  "export": {

  }
}
